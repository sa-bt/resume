{"version":3,"sources":["components/Navbar.js","components/FullPage.js","components/DownIcon.js","sections/firstSection.js","components/SkillCard.js","sections/skillSection.js","sections/aboutSection.js","App.js","serviceWorker.js","index.js"],"names":["NavbarMenu","state","color","bgColor","Math","random","toString","substr","this","setState","generateColor","document","getElementById","style","backgroundColor","console","log","minHeight","snowflakeCount","Navbar","bg","expand","fixed","Toggle","aria-controls","Collapse","id","Nav","className","Link","href","to","spy","smooth","duration","src","data","magic","width","height","onClick","changeBg","changeColor","Component","FullPage","children","props","DownIcon","onclick","display","flexDirection","alignItems","justifyContent","transform","maxWidth","icon","FirstSection","name","title","subTitle","Object","keys","links","map","key","url","img","activeClass","icons","Down","SkillCard","skill","item","SkillSection","marginTop","section","items","eachSkill","AboutSection","alt","content","App","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f9a9a7da.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\nimport '../components/FullPage.css';\r\nimport {Nav, Navbar} from 'react-bootstrap';\r\nimport {Link} from \"react-scroll\";\r\nimport \"./navbar.css\";\r\nimport data from \"../data\";\r\nimport Snowfall from \"react-snowfall\";\r\nimport CarouselCaption from \"react-bootstrap/CarouselCaption\";\r\nclass NavbarMenu extends Component {\r\n    state = {\r\n            color: \"blue\",\r\n            bgColor: \"#967f7f\",\r\n        };\r\n    generateColor()\r\n    {\r\n        return '#' + Math.random().toString(16).substr(-6);\r\n    }\r\n    changeColor()\r\n    {\r\n        this.setState({\r\n            color: this.generateColor()\r\n        });\r\n        //document.body.style.color = this.state.color;\r\n        document.getElementById('App').style.color=this.state.color;\r\n\r\n    }\r\n\r\n    changeBg()\r\n        {\r\n            this.setState({\r\n                bgColor: this.generateColor()\r\n            });\r\n            document.getElementById('App').style.backgroundColor=this.state.bgColor;\r\n            console.log(this.state.bgColor)\r\n            }\r\n\r\n\r\n\r\n    render() {\r\n        return ([\r\n            <Snowfall \r\n  color={this.state.color}\r\n  style={{minHeight:\"calc(3*100vh)\"}}\r\n  snowflakeCount={100}\r\n/>,\r\n                <Navbar bg=\"\" expand=\"lg\" fixed=\"top\" >\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"ml-auto\" >\r\n                            <Nav.Link href=\"#home\">\r\n                                <Link to=\"home\" spy={true} smooth={true}  duration={500}>صفحه اصلی</Link>\r\n                            </Nav.Link>\r\n                            <Nav.Link href=\"#link\" >\r\n                                <Link to=\"aboutMe\" spy={true} smooth={true}  duration={500}>درباره من</Link>\r\n                            </Nav.Link>\r\n                            <Nav.Link >\r\n                                <Link to=\"skill\" spy={true} smooth={true}  duration={500}>مهارت ها</Link>\r\n\r\n                            </Nav.Link>\r\n                        </Nav>\r\n\r\n                        <Nav className=\"mr-auto\" >\r\n                            <Nav.Link href=\"#chenge\">\r\n                            <img src={data.magic.bgColor} width=\"50\" height=\"50\" onClick={() => {\r\n                                    this.changeBg()\r\n                                }}/>\r\n                                <img src={data.magic.color} width=\"50\" height=\"50\" onClick={() => {\r\n                                    this.changeColor()\r\n                                }}/>\r\n                                \r\n                                \r\n                            </Nav.Link>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n                \r\n\r\n                            ])\r\n    }\r\n\r\n}\r\n\r\nexport default NavbarMenu","import React,{Component} from \"react\";\r\nimport NavbarMenu from \"./Navbar\";\r\n\r\nimport './FullPage.css';\r\nclass FullPage extends  Component{\r\n    render() {\r\n        const {children}=this.props;\r\n        return(\r\n            <div className={`fullPage ${this.props.className || ''}`}>\r\n              \r\n                                <NavbarMenu/>\r\n\r\n                {children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default FullPage","import React,{Component} from \"react\";\r\nimport data from \"../data\";\r\nconst DownIcon=(props)=>{\r\n    return[\r\n        <div onClick={props.onclick}\r\n             style={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            transform:'translateY(130px)'\r\n        }}>\r\n            <div style={{\r\n                maxWidth:\"25px\",\r\n                \r\n            }}>\r\n                <img src={props.icon} />\r\n            </div>\r\n        </div>\r\n    ]\r\n}\r\nexport default DownIcon;","import React, {Component} from \"react\";\r\nimport FullPage from \"../components/FullPage\";\r\nimport '../components/FullPage.css';\r\nimport data from \"../data\";\r\nimport DownIcon from \"../components/DownIcon\";\r\nimport {Element} from \"react-scroll\";\r\nimport {SocialIcon} from \"react-social-icons\";\r\nimport {Link} from \"react-scroll\";\r\nimport \"./firstSection.css\"\r\n\r\nclass FirstSection extends Component {\r\n    render() {\r\n        return (\r\n            <Element name=\"home\" className=\"element\" >\r\n            <FullPage>\r\n                <h1>{data.title}</h1>\r\n                <h3>{data.subTitle}</h3>\r\n                <div className=\"iconWrapper\">\r\n                    {\r\n                        Object.keys(data.links).map(key=> {\r\n                            return(\r\n                                <div className=\"icon\">\r\n                                    <a href={data.links[key].url}><img src={data.links[key].img}  width=\"40\" height=\"40\"/></a>\r\n                                    {/* <SocialIcon url={data.links[key]}/> */}\r\n                                </div>\r\n                            )\r\n                            })\r\n                    }\r\n                </div>\r\n                <Link activeClass=\"active\" to=\"aboutMe\" smooth=\"true\">\r\n                    <DownIcon icon={data.icons.Down}/>\r\n                </Link>\r\n            </FullPage>\r\n            </Element>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FirstSection","import React, {Component} from \"react\";\r\nimport {Card} from \"react-bootstrap\";\r\nimport '../components/FullPage.css';\r\nimport '../components/SkillCard.css';\r\n\r\nclass SkillCard extends Component {\r\n    render() {\r\n        const {skill} = this.props\r\n        return (\r\n            <div className=\"card\">\r\n                <img src={skill.img} width=\"150\" height=\"150\"/>\r\n                <header>{skill.item}</header>\r\n                    <p>\r\n                        Some quick example text to build on the card title and make up the bulk\r\n                        of the card's content.\r\n                    </p>\r\n            </div>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default SkillCard","import React, {Component} from \"react\";\r\nimport FullPage from \"../components/FullPage\";\r\nimport SkillCard from \"../components/SkillCard\";\r\nimport '../components/FullPage.css';\r\nimport '../components/SkillCard.css';\r\nimport data from \"../data\";\r\nimport {Element, Link} from \"react-scroll\";\r\n\r\nclass SkillSection extends Component {\r\n    render() {\r\n        return (\r\n            <Element name=\"skill\" className=\"element\"  >\r\n                <FullPage>\r\n                    <h4 style={{marginTop:'70px'}}>{data.section[1].title}</h4>\r\n                    <div className=\"cards\" style={{maxWidth:'fit-content'}}>\r\n                        {\r\n                            data.section[1].items.map(eachSkill => {\r\n                                return <SkillCard skill={eachSkill}/>\r\n                            })\r\n                        }\r\n                    </div>\r\n\r\n                </FullPage>\r\n            </Element>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default SkillSection","import React, {Component} from \"react\";\r\nimport FullPage from \"../components/FullPage\";\r\nimport '../components/FullPage.css';\r\nimport data from \"../data\";\r\nimport {Element, Link} from \"react-scroll\";\r\nimport DownIcon from \"../components/DownIcon\";\r\nimport '../components/AboutMe.css';\r\nimport { FiMail } from 'react-icons/fi';\r\n\r\nclass AboutSection extends Component {\r\n    render() {\r\n        return (\r\n            <Element name=\"aboutMe\" className=\"element\">\r\n                <FullPage>\r\n                        <div className=\"aboutMe\">\r\n                            <div className=\"aboutMe--img\">\r\n                                <img src={data.section[0].img} alt=\"\" />\r\n                            </div>\r\n                            <div className=\"aboutMe--content\">\r\n                                <h5>\r\n                                    {data.section[0].title}\r\n                                </h5>\r\n                                <p>\r\n                                    {data.section[0].content}\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                        <Link  to=\"skill\"  smooth=\"true\" >\r\n                            <DownIcon icon={data.icons.Down}/>\r\n                        </Link>\r\n                </FullPage>\r\n            </Element>\r\n\r\n    )\r\n    }\r\n    }\r\n\r\n    export default AboutSection","import React, {Component} from 'react';\n\nimport FirstSection from \"./sections/firstSection\";\nimport SkillSection from \"./sections/skillSection\";\nimport AboutSection from \"./sections/aboutSection\";\nimport NavbarMenu from \"./components/Navbar\";\n\nimport './App.css';\n\n\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"App\" id=\"App\">\n \n\n  \n                <NavbarMenu/>\n                <FirstSection/>\n                <AboutSection/>\n                <SkillSection/>\n            </div>\n\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}